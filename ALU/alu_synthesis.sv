/* Generated by Yosys 0.9 (git sha1 1979e0b) */

module sync_arith_unit_4_synthesis(i_op, i_arg_A, i_arg_B, i_clk, i_reset, o_result, o_status);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  input [3:0] i_arg_A;
  input [3:0] i_arg_B;
  input i_clk;
  input [1:0] i_op;
  input i_reset;
  output [3:0] o_result;
  reg [3:0] o_result;
  output [3:0] o_status;
  wire [4:0] overflow_check;
  wire [3:0] temp_result;
  wire [3:0] temp_status;
  assign _061_ = ~(i_arg_B[2] ^ i_arg_A[3]);
  assign _072_ = i_arg_A[3] & ~(i_arg_B[2]);
  assign _083_ = i_arg_A[2] & ~(i_arg_B[1]);
  assign _094_ = ~((_083_ & _061_) | _072_);
  assign _103_ = i_arg_B[1] ^ i_arg_A[2];
  assign _113_ = _103_ | ~(_061_);
  assign _124_ = i_arg_B[0] & ~(i_arg_A[1]);
  assign _134_ = ~((_124_ | _113_) & _094_);
  assign _004_ = ~((_134_ & _061_) | _072_);
  assign _006_ = _004_ ^ _061_;
  assign _005_ = ~(_004_ ^ _061_);
  assign _007_ = _005_ & ~(_006_);
  assign _002_ = _006_ | _006_;
  assign _165_ = ~((_007_ | _002_) & _007_);
  assign _008_ = _006_ | ~(_005_);
  assign _166_ = ~(_008_ | _002_);
  assign _167_ = ~((_007_ | _008_) & _007_);
  assign _168_ = ~((_167_ & _166_) | _165_);
  assign _169_ = _008_ | _008_;
  assign _170_ = _169_ | ~(_166_);
  assign _171_ = ~(_008_ | _008_);
  assign _172_ = ~((_167_ & _171_) | _167_);
  assign _173_ = ~((_172_ | _170_) & _168_);
  assign _174_ = ~(_171_ & _171_);
  assign _175_ = ~(_174_ | _170_);
  assign _000_ = ~(_006_ | _006_);
  assign _001_ = ~((_000_ | _008_) & _007_);
  assign _003_ = ~(_002_ | _008_);
  assign _009_ = ~((_001_ & _003_) | _001_);
  assign _010_ = _002_ | _008_;
  assign _011_ = _010_ | ~(_003_);
  assign _012_ = ~(_134_ ^ _061_);
  assign _013_ = ~(_012_ | _006_);
  assign _014_ = ~((_013_ | _008_) & _007_);
  assign _015_ = _012_ | _006_;
  assign _016_ = ~(_015_ | _008_);
  assign _017_ = _124_ | _103_;
  assign _018_ = _017_ & ~(_083_);
  assign _019_ = _018_ ^ _061_;
  assign _020_ = _124_ ^ _103_;
  assign _021_ = _020_ | _019_;
  assign _022_ = i_arg_B[0] ^ i_arg_A[1];
  assign _023_ = _022_ | i_arg_A[0];
  assign _024_ = _023_ | _021_;
  assign _025_ = _019_ | ~(_024_);
  assign _026_ = ~((_025_ & _016_) | _014_);
  assign _027_ = ~((_026_ | _011_) & _009_);
  assign _028_ = ~((_027_ & _175_) | _173_);
  assign _029_ = _028_ ^ _006_;
  assign _030_ = _024_ | ~(_016_);
  assign _031_ = _030_ | _011_;
  assign _032_ = _175_ & ~(_031_);
  assign _033_ = _006_ & ~(_005_);
  assign _034_ = _005_ | ~(_006_);
  assign _035_ = _033_ & ~(_034_);
  assign _036_ = _034_ | _034_;
  assign _037_ = _035_ & ~(_036_);
  assign _038_ = _036_ | _036_;
  assign _039_ = _037_ & ~(_038_);
  assign _040_ = ~(_006_ & _006_);
  assign _041_ = _040_ | _034_;
  assign _042_ = _041_ | _041_;
  assign _043_ = ~(_012_ & _006_);
  assign _044_ = _043_ | _034_;
  assign _045_ = ~_020_;
  assign _046_ = ~(_018_ ^ _061_);
  assign _047_ = _046_ | _044_;
  assign _048_ = _047_ | _042_;
  assign _049_ = _039_ & ~(_048_);
  assign _050_ = _049_ ^ _005_;
  assign _051_ = ~((_032_ | _029_) & _050_);
  assign _052_ = ~(i_op[1] | i_op[0]);
  assign _053_ = i_op[1] & ~(i_op[0]);
  assign _054_ = ~_053_;
  assign _055_ = ~(i_arg_B[0] ^ i_arg_A[0]);
  assign _056_ = ~_055_;
  assign _057_ = i_arg_A[3] | ~(i_arg_B[3]);
  assign _058_ = i_arg_B[3] | ~(i_arg_A[3]);
  assign _059_ = ~(_058_ & _057_);
  assign _060_ = ~(i_arg_B[2] & i_arg_A[2]);
  assign _062_ = ~(i_arg_B[2] ^ i_arg_A[2]);
  assign _063_ = ~(i_arg_B[1] & i_arg_A[1]);
  assign _064_ = ~(i_arg_B[1] ^ i_arg_A[1]);
  assign _065_ = ~(i_arg_B[0] & i_arg_A[0]);
  assign _066_ = ~((_065_ | _064_) & _063_);
  assign _067_ = _066_ & ~(_062_);
  assign _068_ = _060_ & ~(_067_);
  assign _069_ = ~(_068_ ^ _059_);
  assign _070_ = _066_ ^ _062_;
  assign _071_ = ~_070_;
  assign _073_ = ~(_065_ ^ _064_);
  assign _074_ = _073_ & ~(_056_);
  assign _075_ = ~_074_;
  assign _076_ = ~((_075_ | _071_) & _069_);
  assign _077_ = i_arg_A[3] & ~(i_arg_B[3]);
  assign _078_ = _057_ & ~(_077_);
  assign _079_ = ~(i_arg_A[3] & i_arg_B[3]);
  assign _080_ = ~((_060_ | _078_) & _079_);
  assign _081_ = _059_ & ~(_062_);
  assign _082_ = ~((_081_ & _066_) | _080_);
  assign _084_ = _082_ ^ _059_;
  assign _085_ = _076_ & ~(_084_);
  assign _086_ = _069_ & ~(_084_);
  assign _087_ = ~(_073_ & _070_);
  assign _088_ = _087_ | ~(_086_);
  assign _089_ = ~((_088_ | _056_) & _085_);
  assign _090_ = _068_ ^ _059_;
  assign _091_ = _090_ | ~(_084_);
  assign _092_ = ~((_091_ & _089_) | _054_);
  assign _093_ = _052_ ? _051_ : _092_;
  assign temp_status[3] = _093_ & i_reset;
  assign _095_ = ~i_arg_A[0];
  assign _096_ = i_op[0] & ~(i_op[1]);
  assign _097_ = i_op[1] & i_op[0];
  assign _098_ = i_arg_A[0] & ~(i_arg_A[3]);
  assign _099_ = i_arg_A[3] & i_arg_A[0];
  assign _100_ = ~((_099_ | _098_) & _097_);
  assign _101_ = ~i_arg_B[1];
  assign _102_ = i_arg_B[0] | i_arg_B[3];
  assign _104_ = _101_ & ~(_102_);
  assign _105_ = _104_ & ~(i_arg_B[2]);
  assign _106_ = _105_ | _055_;
  assign _107_ = ~((_106_ | _054_) & _100_);
  assign _108_ = i_arg_B[0] ^ i_arg_A[0];
  assign _109_ = i_arg_B[2] | ~(i_arg_A[2]);
  assign _110_ = i_arg_B[2] ^ i_arg_A[2];
  assign _111_ = i_arg_A[1] & ~(i_arg_B[1]);
  assign _112_ = i_arg_A[0] | ~(i_arg_B[0]);
  assign _114_ = ~((_112_ & _064_) | _111_);
  assign _115_ = ~((_114_ | _110_) & _109_);
  assign _116_ = _110_ | ~(_064_);
  assign _117_ = ~((_116_ | _108_) & _115_);
  assign _118_ = _117_ | _079_;
  assign _119_ = i_arg_A[3] | i_arg_B[3];
  assign _120_ = _119_ & _079_;
  assign _121_ = ~((_120_ | _109_) & _058_);
  assign _122_ = ~(_120_ | _110_);
  assign _123_ = _122_ & ~(_114_);
  assign _125_ = _123_ | _121_;
  assign _126_ = _119_ ? _118_ : _125_;
  assign _127_ = _064_ & ~(_108_);
  assign _128_ = _127_ & _122_;
  assign _129_ = _128_ | ~(_057_);
  assign _130_ = ~((_129_ | _126_) & _058_);
  assign _131_ = ~((_130_ & _096_) | _107_);
  assign _132_ = _052_ ? _095_ : _131_;
  assign _133_ = ~_022_;
  assign _135_ = i_arg_A[1] ^ i_arg_A[0];
  assign _136_ = i_arg_A[3] ? _135_ : i_arg_A[1];
  assign _137_ = ~i_arg_B[2];
  assign _138_ = i_arg_B[3] | ~(i_arg_B[0]);
  assign _139_ = _101_ & ~(_138_);
  assign _140_ = ~((_139_ & _137_) | _073_);
  assign _141_ = ~((_140_ & _053_) | (_136_ & _097_));
  assign _142_ = _052_ ? _133_ : _141_;
  assign _143_ = _142_ | _132_;
  assign _144_ = ~i_arg_A[2];
  assign _145_ = ~(i_arg_A[1] | i_arg_A[0]);
  assign _146_ = _145_ ^ i_arg_A[2];
  assign _147_ = i_arg_A[3] ? _146_ : _144_;
  assign _148_ = _097_ & ~(_147_);
  assign _149_ = i_arg_B[1] & ~(_102_);
  assign _150_ = ~((_149_ & _137_) | _070_);
  assign _151_ = ~((_150_ & _053_) | _148_);
  assign _152_ = _052_ ? _045_ : _151_;
  assign _153_ = i_arg_B[1] & ~(_138_);
  assign _154_ = _153_ & ~(i_arg_B[2]);
  assign _155_ = _069_ & ~(_154_);
  assign _156_ = ~((_155_ & _053_) | (_097_ & i_arg_A[3]));
  assign _157_ = _052_ ? _019_ : _156_;
  assign _158_ = _157_ | _152_;
  assign _159_ = _158_ | _143_;
  assign _160_ = _159_ | _093_;
  assign temp_status[1] = i_reset & ~(_160_);
  assign _161_ = ~(_142_ ^ _132_);
  assign _162_ = ~(_157_ ^ _152_);
  assign _163_ = _162_ ^ _161_;
  assign _164_ = _163_ | _093_;
  assign temp_status[2] = i_reset & ~(_164_);
  assign temp_result[0] = i_reset & ~(_132_);
  assign temp_result[1] = i_reset & ~(_142_);
  assign temp_result[2] = i_reset & ~(_152_);
  assign temp_result[3] = i_reset & ~(_157_);
  always @(posedge i_clk)
      o_result[0] <= temp_result[0];
  always @(posedge i_clk)
      o_result[1] <= temp_result[1];
  always @(posedge i_clk)
      o_result[2] <= temp_result[2];
  always @(posedge i_clk)
      o_result[3] <= temp_result[3];
  reg \o_status_reg[0] ;
  always @(posedge i_clk)
      \o_status_reg[0]  <= temp_status[3];
  assign o_status[0] = \o_status_reg[0] ;
  reg \o_status_reg[1] ;
  always @(posedge i_clk)
      \o_status_reg[1]  <= temp_status[1];
  assign o_status[1] = \o_status_reg[1] ;
  reg \o_status_reg[2] ;
  always @(posedge i_clk)
      \o_status_reg[2]  <= temp_status[2];
  assign o_status[2] = \o_status_reg[2] ;
  assign o_status[3] = o_status[0];
  assign overflow_check = 5'h00;
  assign temp_status[0] = temp_status[3];
endmodule
