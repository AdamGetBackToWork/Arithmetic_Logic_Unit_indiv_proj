$date
	Sun Dec 10 13:03:04 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! simulation_test_status [3:0] $end
$var wire 4 " simulation_test_result [3:0] $end
$var reg 4 # test_arg_A [3:0] $end
$var reg 4 $ test_arg_B [3:0] $end
$var reg 1 % test_clk $end
$var reg 2 & test_op [1:0] $end
$var reg 1 ' test_reset $end
$scope module alu_model_simulation $end
$var wire 4 ( i_arg_A [3:0] $end
$var wire 4 ) i_arg_B [3:0] $end
$var wire 1 % i_clk $end
$var wire 2 * i_op [1:0] $end
$var wire 1 ' i_reset $end
$var reg 4 + comp_A [3:0] $end
$var reg 4 , comp_B [3:0] $end
$var reg 4 - o_result [3:0] $end
$var reg 4 . o_status [3:0] $end
$var reg 5 / overflow_check [4:0] $end
$var reg 4 0 s_A [3:0] $end
$var reg 4 1 s_B [3:0] $end
$var reg 4 2 sum [3:0] $end
$var reg 4 3 temp_B [3:0] $end
$var reg 4 4 temp_result [3:0] $end
$var reg 4 5 temp_status [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b110 5
b1111 4
b100 3
b1111 2
b100 1
b11 0
b0 /
bx .
bx -
b0 ,
b0 +
b0 *
b10 )
b11 (
1'
b0 &
0%
b10 $
b11 #
bx "
bx !
$end
#1
b110 !
b110 .
b1111 "
b1111 -
1%
#2
b110 1
b1111 0
b1001 2
b110 3
b1001 4
b100 5
b11 $
b11 )
b1111 #
b1111 (
0%
#3
b100 !
b100 .
b1001 "
b1001 -
1%
#4
b1101 0
b0 2
b110 3
bx 4
b1001 5
b1101 #
b1101 (
0%
#5
b1001 !
b1001 .
bx "
bx -
1%
#6
b110 2
b1000 1
b1110 0
b1000 3
b110 4
b100 5
b1100 $
b1100 )
b1110 #
b1110 (
0%
#7
b100 !
b100 .
b110 "
b110 -
1%
#8
b110 1
b1 0
b1011 2
b110 3
b1011 4
b0 5
b11 $
b11 )
b1 #
b1 (
0%
#9
b0 !
b0 .
b1011 "
b1011 -
1%
#10
b100 5
b100 1
b100 0
b0 2
b100 3
b0 4
b10 $
b10 )
b100 #
b100 (
0%
#11
b100 !
b100 .
b0 "
b0 -
1%
#12
bx 4
b1010 1
b101 0
b1010 3
b1001 5
b1101 $
b1101 )
b101 #
b101 (
0%
#13
b1001 !
b1001 .
bx "
bx -
1%
#14
b100 0
b1010 3
bx 4
b1001 5
b101 $
b101 )
b100 #
b100 (
0%
#15
1%
#16
b0 3
b1 4
b0 5
b11 #
b11 (
0%
b1 &
b1 *
#17
b0 !
b0 .
b1 "
b1 -
1%
#18
b100 5
b0 4
b100 $
b100 )
b111 #
b111 (
0%
#19
b100 !
b100 .
b0 "
b0 -
1%
#20
b1 4
b0 5
b11 $
b11 )
b1100 #
b1100 (
0%
#21
b0 !
b0 .
b1 "
b1 -
1%
#22
b100 5
b0 4
b1101 $
b1101 )
b1101 #
b1101 (
0%
#23
b100 !
b100 .
b0 "
b0 -
1%
#24
b100 5
b1011 $
b1011 )
b100 #
b100 (
0%
#25
1%
#26
b1 4
b0 5
b101 $
b101 )
b0 #
b0 (
0%
#27
b0 !
b0 .
b1 "
b1 -
1%
#28
b100 5
b101 2
b11 1
b10 0
b101 4
b11 $
b11 )
b10 #
b10 (
0%
b10 &
b10 *
#29
b100 !
b100 .
b101 "
b101 -
1%
#30
b1 1
b1 2
b1 4
b0 5
b1 $
b1 )
0%
#31
b0 !
b0 .
b1 "
b1 -
1%
#32
b100 5
b1101 0
b1100 2
b1100 4
b1101 #
b1101 (
0%
#33
b100 !
b100 .
b1100 "
b1100 -
1%
#34
b11 1
b110 0
b0 2
bx 4
b1001 5
b11 $
b11 )
b110 #
b110 (
0%
#35
b1001 !
b1001 .
bx "
bx -
1%
#36
b110 2
b0 1
b111 0
b110 4
b100 5
b0 $
b0 )
b111 #
b111 (
0%
#37
b100 !
b100 .
b110 "
b110 -
1%
#38
b0 2
b11 4
b100 5
b11 #
b11 (
0%
b11 &
b11 *
#39
b11 "
b11 -
1%
#40
b111 4
b0 5
b111 #
b111 (
0%
#41
b0 !
b0 .
b111 "
b111 -
1%
#42
b100 5
b0 4
b0 #
b0 (
0%
#43
b100 !
b100 .
b0 "
b0 -
1%
#44
b1101 4
b0 5
b1011 #
b1011 (
0%
#45
b0 !
b0 .
b1101 "
b1101 -
1%
#46
b110 5
b1111 4
b1001 #
b1001 (
0%
#47
b110 !
b110 .
b1111 "
b1111 -
1%
#48
