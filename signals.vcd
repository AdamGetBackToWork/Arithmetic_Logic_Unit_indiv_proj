$date
	Sun Nov 26 00:51:02 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench_ALU $end
$var wire 4 ! syn_status [3:0] $end
$var wire 8 " syn_result [7:0] $end
$var wire 4 # sim_status [3:0] $end
$var wire 8 $ sim_result [7:0] $end
$var reg 8 % s_arg_A [7:0] $end
$var reg 8 & s_arg_B [7:0] $end
$var reg 1 ' s_clk $end
$var reg 2 ( s_op [1:0] $end
$var reg 1 ) s_reset $end
$scope module alu_model_simulation $end
$var wire 8 * i_arg_A [7:0] $end
$var wire 8 + i_arg_B [7:0] $end
$var wire 1 ' i_clk $end
$var wire 2 , i_op [1:0] $end
$var wire 1 ) i_reset $end
$var reg 8 - o_result [7:0] $end
$var reg 4 . o_status [3:0] $end
$upscope $end
$scope module alu_model_synthesis $end
$var wire 8 / i_arg_A [7:0] $end
$var wire 8 0 i_arg_B [7:0] $end
$var wire 1 ' i_clk $end
$var wire 2 1 i_op [1:0] $end
$var wire 1 ) i_reset $end
$var reg 8 2 o_result [7:0] $end
$var reg 4 3 o_status [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
b0 1
b11111100 0
b10 /
bx .
bx -
b0 ,
b11111100 +
b10 *
1)
b0 (
0'
b11111100 &
b10 %
bx $
bx #
bx "
bx !
$end
#1
b1010 $
b1010 -
b0 #
b0 .
b1010 "
b1010 2
b0 !
b0 3
1'
#2
b11111110 &
b11111110 +
b11111110 0
b1111110 %
b1111110 *
b1111110 /
0'
#3
b10000010 "
b10000010 2
b10000010 $
b10000010 -
1'
#4
b11111100 &
b11111100 +
b11111100 0
0'
#5
b10000110 $
b10000110 -
b10000110 "
b10000110 2
1'
#6
b11111110 %
b11111110 *
b11111110 /
0'
#7
b110 "
b110 2
b110 $
b110 -
1'
#8
